#!/bin/bash

# This script prepares a initramfs that can boot a NodeOS rootfs

GRN="\e[32m"
CLR="\e[0m"


if [[ -z "$name" ]]; then name=initramfs; fi

ROOT=$(pwd)/ROOT

sudo rm -rf $ROOT &&
mkdir -p $ROOT    || exit 200

#case $PLATFORM in
#  qemu)
#    gunzip -c `pwd`/../barebones/barebones.cpio.gz |
#    (
#      cd "$ROOT";
#      cpio -i -d -H newc --no-absolute-filenames
#    ) || exit 201
#  ;;
#esac


#
# Install system dependencies
#

NODE_DIR=`pwd`/../barebones/deps/node
NPM="node $NODE_DIR/deps/npm/cli.js"
npmi="npm_config_prefix=$ROOT $NPM i -g"

eval $npmi `grep -v "^#" packages.txt` || exit 210

ln -fs bin/century $ROOT/init || exit 211

mkdir -p $ROOT/sbin                         &&
ln -fs ../bin/nodeos-rootfs $ROOT/sbin/init || exit 212


#
# Use a well-known DNS server for now, we do not yet support DHCP
#

mkdir -p $ROOT/etc              &&
cp    -f resolv.conf $ROOT/etc/ || exit 220


#
# Wrap the system up and pack it
#

# Set initramfs files owner to root
sudo chown -R root:root "$ROOT"                       &&
sudo chmod -R go=r      "$ROOT"                       &&
sudo find "$ROOT" -type d | xargs sudo chmod -R go=rx || exit 230

case $PLATFORM in
  docker)
    sudo docker build -t $name . || exit 231
  ;;
  qemu)
    (
      cd "$ROOT";
      find . | cpio -o -H newc | gzip
    ) > $name.cpio.gz || exit 232
  ;;
esac


echo -e "${GRN}Successfully built '$name'${CLR}"
