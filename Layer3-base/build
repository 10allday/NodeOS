#!/bin/bash

# We prepare the image with dependencies from NPM
# Since there is no functional NPM on the system yet,
# we use NPM from the outer host to install NPM into the container

if [[ -e "$SUDO_COMMAND" ]]; then SUDO="sudo "; fi
if [[ -z "$name" ]]; then
  echo "Please Specify an Image Name"
  echo "e.g. '${SUDO}name=layer3 $0 $@'"
  exit 5
fi


if [[ -z "$QEMU" ]]; then
  ROOT=$(pwd)/ROOT
else
  ROOT=/tmp/ROOT
fi


# Install system dependencies using NPM from Ubuntu

npmi="npm_config_prefix=$ROOT npm i -g"

eval $npmi piranna/node-century#patch-1 || exit 20

ln -s bin/century $ROOT/init


#cat <<EOH > $ROOT/init || exit 80
##!/usr/bin/node
#while(true)
#{
#  console.log('Hello NodeOS! :-)')
#};
#EOH
#
#chmod +x $ROOT/init


cat <<EOH > $ROOT/boot.js || exit 80
#!/usr/bin/env node
while(true)
  console.log('Booting... :-)')
EOH


if [[ -z "$QEMU" ]]; then
  docker build -t $name . || exit 50
else
  (cd "$ROOT"; find . | cpio -o -H newc | gzip) > $name.cpio.gz || exit 101
fi


echo "Successfully built Layer-3 image '$name'"
echo "You should tag your image with:"
echo "    ${SUDO}docker tag $name nodeos/nodeos"
